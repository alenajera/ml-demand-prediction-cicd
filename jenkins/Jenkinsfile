pipeline {
  agent any

  // Fuerza la herramienta Git que definiste en Manage Jenkins â†’ Tools
  tools { git 'Default' }

  options { timestamps() }

  environment {
    IMAGE_NAME     = 'ml-demand-api'
    CONTAINER_NAME = 'ml_demand_test'
    TEST_URL       = 'http://host.docker.internal:5000/predict'
  }

  stages {
    stage('Prepare workspace (clean)') {
      steps {
        // Limpia completamente el workspace (borra .git corrupto si existe)
        deleteDir()
        sh 'pwd && ls -la'
      }
    }

    stage('Checkout') {
      steps {
        // Checkout robusto con extensiones
        checkout([
          $class: 'GitSCM',
          branches: [[name: '*/main']],
          doGenerateSubmoduleConfigurations: false,
          extensions: [
            [$class: 'CleanBeforeCheckout']    // git clean -fdx antes de bajar
          ],
          userRemoteConfigs: [[
            url: 'https://github.com/alenajera/ml-demand-prediction-cicd.git',
            credentialsId: 'github-pat'
          ]]
        ])
      }
    }

    stage('Build Docker Image') {
      steps {
        sh 'docker version || true'
        sh 'docker build -t ml-demand-api -f docker/Dockerfile .'
      }
    }

    stage('Run Container for Testing') {
      steps {
        sh '''
          docker rm -f $CONTAINER_NAME >/dev/null 2>&1 || true
          docker run -d --name $CONTAINER_NAME -p 5000:5000 $IMAGE_NAME
        '''
      }
    }

    stage('Test API Endpoint') {
      steps {
        sh '''
          sleep 5
          echo "Calling $TEST_URL"
          curl -v -s -X POST $TEST_URL \
            -H "Content-Type: application/json" \
            -d '{"price":9.0,"ads_spent":750}'
        '''
      }
    }

    stage('Cleanup') {
      steps {
        sh 'docker stop $CONTAINER_NAME >/dev/null 2>&1 || true'
        sh 'docker rm   $CONTAINER_NAME >/dev/null 2>&1 || true'
      }
    }
  }

  post {
    always {
      sh 'echo "--- Images top ---"; docker image ls | head -n 10 || true'
      sh 'echo "--- Containers ---"; docker ps -a | head -n 10 || true'
    }
  }
}